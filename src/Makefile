# Makefile.in generated by automake 1.8.5 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




SOURCES = $(gnubiff_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/gnubiff
pkglibdir = $(libdir)/gnubiff
pkgincludedir = $(includedir)/gnubiff
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = gnubiff$(EXEEXT)
am__append_1 = GNOME_gnubiffApplet.server.in
am__append_2 = $(server_in_files:.server.in=.server)
am__append_3 = GNOME_gnubiffApplet.xml
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(serverdir)" "$(DESTDIR)$(uidir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__gnubiff_SOURCES_DIST = gnubiff.cc biff.cc biff.h nls.h mailbox.cc \
	mailbox.h socket.cc socket.h file.cc file.h imap4.cc imap4.h \
	maildir.cc maildir.h mh.cc mh.h pop.cc pop.h apop.cc apop.h \
	pop3.cc pop3.h gui.cc gui.h ui-applet.cc ui-applet.h \
	ui-applet-gtk.cc ui-applet-gtk.h ui-preferences.cc \
	ui-preferences.h ui-authentication.cc ui-authentication.h \
	ui-certificate.cc ui-certificate.h ui-properties.cc \
	ui-properties.h gtk_image_animation.cc gtk_image_animation.h \
	ui-popup.cc ui-popup.h ui-applet-gnome.cc ui-applet-gnome.h
am__objects_1 = gnubiff.$(OBJEXT) biff.$(OBJEXT) mailbox.$(OBJEXT) \
	socket.$(OBJEXT) file.$(OBJEXT) imap4.$(OBJEXT) \
	maildir.$(OBJEXT) mh.$(OBJEXT) pop.$(OBJEXT) apop.$(OBJEXT) \
	pop3.$(OBJEXT) gui.$(OBJEXT) ui-applet.$(OBJEXT) \
	ui-applet-gtk.$(OBJEXT) ui-preferences.$(OBJEXT) \
	ui-authentication.$(OBJEXT) ui-certificate.$(OBJEXT) \
	ui-properties.$(OBJEXT) gtk_image_animation.$(OBJEXT) \
	ui-popup.$(OBJEXT)
am__objects_2 = ui-applet-gnome.$(OBJEXT)
#am_gnubiff_OBJECTS = $(am__objects_1)
am_gnubiff_OBJECTS = $(am__objects_2) $(am__objects_1)
gnubiff_OBJECTS = $(am_gnubiff_OBJECTS)
am__DEPENDENCIES_1 =
gnubiff_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/config
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/apop.Po ./$(DEPDIR)/biff.Po \
	./$(DEPDIR)/file.Po ./$(DEPDIR)/gnubiff.Po \
	./$(DEPDIR)/gtk_image_animation.Po \
	./$(DEPDIR)/gui.Po ./$(DEPDIR)/imap4.Po \
	./$(DEPDIR)/mailbox.Po ./$(DEPDIR)/maildir.Po \
	./$(DEPDIR)/mh.Po ./$(DEPDIR)/pop.Po \
	./$(DEPDIR)/pop3.Po ./$(DEPDIR)/socket.Po \
	./$(DEPDIR)/ui-applet-gnome.Po \
	./$(DEPDIR)/ui-applet-gtk.Po \
	./$(DEPDIR)/ui-applet.Po \
	./$(DEPDIR)/ui-authentication.Po \
	./$(DEPDIR)/ui-certificate.Po \
	./$(DEPDIR)/ui-popup.Po \
	./$(DEPDIR)/ui-preferences.Po \
	./$(DEPDIR)/ui-properties.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(gnubiff_SOURCES)
DIST_SOURCES = $(am__gnubiff_SOURCES_DIST)
serverDATA_INSTALL = $(INSTALL_DATA)
uiDATA_INSTALL = $(INSTALL_DATA)
DATA = $(server_DATA) $(ui_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /users/cortex/rougier/Development/gnubiff/config/missing --run aclocal-1.8
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /users/cortex/rougier/Development/gnubiff/config/missing --run tar
AUTOCONF = ${SHELL} /users/cortex/rougier/Development/gnubiff/config/missing --run autoconf
AUTOHEADER = ${SHELL} /users/cortex/rougier/Development/gnubiff/config/missing --run autoheader
AUTOMAKE = ${SHELL} /users/cortex/rougier/Development/gnubiff/config/missing --run automake-1.8
AWK = gawk
CATALOGS =  fr.gmo fr_FR.gmo fr_CA.gmo de.gmo nl.gmo ro.gmo es.gmo sv.gmo it.gmo
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
GCONFTOOL = /global/dagda/gnome-2.6/bin/gconftool-2
GETTEXT_PACKAGE = gnubiff
GMOFILES =  fr.gmo fr_FR.gmo fr_CA.gmo de.gmo nl.gmo ro.gmo es.gmo sv.gmo it.gmo
GMSGFMT = /usr/bin/msgfmt
GNOME_PANEL_DEP_CFLAGS = -DORBIT2=1 -pthread -I/global/dagda/gnome-2.6/include/panel-2.0 -I/global/dagda/gnome-2.6/include/gtk-2.0 -I/global/dagda/gnome-2.6/include/libgnomeui-2.0 -I/global/dagda/gnome-2.6/include/libbonoboui-2.0 -I/global/dagda/gnome-2.6/lib/gtk-2.0/include -I/usr/X11R6/include -I/global/dagda/gnome-2.6/include/atk-1.0 -I/global/dagda/gnome-2.6/include/pango-1.0 -I/usr/include/freetype2 -I/global/dagda/gnome-2.6/include/glib-2.0 -I/global/dagda/gnome-2.6/lib/glib-2.0/include -I/global/dagda/gnome-2.6/include/libgnome-2.0 -I/global/dagda/gnome-2.6/include/libgnomecanvas-2.0 -I/global/dagda/gnome-2.6/include/libart-2.0 -I/global/dagda/gnome-2.6/include/gconf/2 -I/global/dagda/gnome-2.6/include/orbit-2.0 -I/global/dagda/gnome-2.6/include/libbonobo-2.0 -I/global/dagda/gnome-2.6/include/gnome-vfs-2.0 -I/global/dagda/gnome-2.6/lib/gnome-vfs-2.0/include -I/global/dagda/gnome-2.6/include/bonobo-activation-2.0 -I/global/dagda/gnome-2.6/include/libxml2  
GNOME_PANEL_DEP_LIBS = -Wl,--export-dynamic -pthread -L/global/dagda/gnome-2.6/lib -L/usr/X11R6/lib -lpanel-applet-2 -lgnomeui-2 -lSM -lICE -lbonoboui-2 -lxml2 -lpthread -lz -lgnomecanvas-2 -lgnome-2 -lpopt -lart_lgpl_2 -lpangoft2-1.0 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lpangoxft-1.0 -lpangox-1.0 -lpango-1.0 -lgobject-2.0 -lbonobo-2 -lgconf-2 -lgnomevfs-2 -lbonobo-activation -lORBit-2 -lm -lgmodule-2.0 -ldl -lgthread-2.0 -lglib-2.0  
GNUBIFF_DEP_CFLAGS = -pthread -I/global/dagda/gnome-2.6/include/gtk-2.0 -I/global/dagda/gnome-2.6/lib/gtk-2.0/include -I/usr/X11R6/include -I/global/dagda/gnome-2.6/include/atk-1.0 -I/global/dagda/gnome-2.6/include/pango-1.0 -I/usr/include/freetype2 -I/global/dagda/gnome-2.6/include/glib-2.0 -I/global/dagda/gnome-2.6/lib/glib-2.0/include -I/global/dagda/gnome-2.6/include/libglade-2.0 -I/global/dagda/gnome-2.6/include/libxml2  
GNUBIFF_DEP_LIBS = -Wl,--export-dynamic -pthread -L/global/dagda/gnome-2.6/lib -lglade-2.0 -lgtk-x11-2.0 -lxml2 -lpthread -lz -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangoxft-1.0 -lpangox-1.0 -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -ldl -lgthread-2.0 -lglib-2.0  
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_CAVES_RULE = %.caves:     %.caves.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_DESKTOP_RULE = %.desktop:   %.desktop.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_DIRECTORY_RULE = %.directory: %.directory.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_EXTRACT = $(top_builddir)/intltool-extract
INTLTOOL_KBD_RULE = %.kbd:       %.kbd.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -m -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_KEYS_RULE = %.keys:      %.keys.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -k -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_MERGE = $(top_builddir)/intltool-merge
INTLTOOL_OAF_RULE = %.oaf:       %.oaf.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -o -p $(top_srcdir)/po $< $@
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_PONG_RULE = %.pong:      %.pong.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_PROP_RULE = %.prop:      %.prop.in      $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SCHEMAS_RULE = %.schemas:   %.schemas.in   $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -s -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SERVER_RULE = %.server:    %.server.in    $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -o -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SHEET_RULE = %.sheet:     %.sheet.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_SOUNDLIST_RULE = %.soundlist: %.soundlist.in $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_THEME_RULE = %.theme:     %.theme.in     $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -d -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_UI_RULE = %.ui:        %.ui.in        $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_UPDATE = $(top_builddir)/intltool-update
INTLTOOL_XAM_RULE = %.xam:       %.xml.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
INTLTOOL_XML_RULE = %.xml:       %.xml.in       $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -x -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
LDFLAGS = 
LIBOBJS = 
LIBS = -lssl -lpopt 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /users/cortex/rougier/Development/gnubiff/config/missing --run makeinfo
MKINSTALLDIRS = config/mkinstalldirs
MSGFMT = /usr/bin/msgfmt
OBJEXT = o
PACKAGE = gnubiff
PACKAGE_BUGREPORT = rougier@loria.fr
PACKAGE_NAME = gnubiff
PACKAGE_STRING = gnubiff 2.0.2
PACKAGE_TARNAME = gnubiff
PACKAGE_VERSION = 2.0.2
PASSWORD_STRING_FALSE = #
PASSWORD_STRING_TRUE = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POFILES =  fr.po fr_FR.po fr_CA.po de.po nl.po ro.po es.po sv.po it.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
USE_GNOME_FALSE = #
USE_GNOME_TRUE = 
USE_NLS = yes
USE_PASSWORD_FALSE = #
USE_PASSWORD_TRUE = 
VERSION = 2.0.2
XGETTEXT = /usr/bin/xgettext
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build_alias = 
datadir = ${prefix}/share
exec_prefix = ${prefix}
host_alias = 
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /users/cortex/rougier/Development/gnubiff/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p -- .
oldincludedir = /usr/include
prefix = /global/dagda/gnome-2.6
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
INCLUDES = \
	$(GNUBIFF_DEP_CFLAGS)						\
	$(GNOME_PANEL_DEP_CFLAGS)					\
	-DGNUBIFF_LOCALEDIR=\""$(datadir)/locale"\"	\
	-DGNUBIFF_DATADIR=\""$(pkgdatadir)"\"		\
	-DGNUBIFF_ICONDIR=\""$(datadir)/pixmaps"\"	\
	-DREAL_DATADIR=\""$(datadir)"\"				\
	-D_GNU_SOURCE								\
	-Wall -ansi -pedantic

gnome_sources = \
	ui-applet-gnome.cc 		ui-applet-gnome.h

common_sources = \
	gnubiff.cc										\
	biff.cc					biff.h					\
							nls.h					\
	\
	mailbox.cc				mailbox.h				\
	socket.cc				socket.h				\
	file.cc					file.h					\
	imap4.cc				imap4.h					\
	maildir.cc				maildir.h				\
	mh.cc					mh.h					\
	pop.cc					pop.h					\
	apop.cc					apop.h					\
	pop3.cc					pop3.h					\
	\
	gui.cc					gui.h					\
	ui-applet.cc			ui-applet.h				\
	ui-applet-gtk.cc 		ui-applet-gtk.h			\
	ui-preferences.cc 		ui-preferences.h		\
	ui-authentication.cc	ui-authentication.h		\
	ui-certificate.cc		ui-certificate.h		\
	ui-properties.cc		ui-properties.h			\
	gtk_image_animation.cc	gtk_image_animation.h 	\
	ui-popup.cc				ui-popup.h

#gnubiff_SOURCES = \
#	$(common_sources)

gnubiff_SOURCES = \
	$(gnome_sources)		\
	$(common_sources)

gnubiff_LDADD = $(INTLLIBS) $(GNUBIFF_DEP_LIBS) $(GNOME_PANEL_DEP_LIBS)
serverdir = $(libdir)/bonobo/servers
server_in_files = $(am__append_1)
server_DATA = $(am__append_2)
uidir = $(datadir)/gnome-2.0/ui
ui_DATA = $(am__append_3)
EXTRA_DIST = \
	GNOME_gnubiffApplet.server.in	\
	GNOME_gnubiffApplet.xml			\
	gnubiff.schemas					\
	$(gnome_sources)

DISTCLEANFILES = \
        GNOME_gnubiffApplet.server

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
gnubiff$(EXEEXT): $(gnubiff_OBJECTS) $(gnubiff_DEPENDENCIES) 
	@rm -f gnubiff$(EXEEXT)
	$(CXXLINK) $(gnubiff_LDFLAGS) $(gnubiff_OBJECTS) $(gnubiff_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/apop.Po
include ./$(DEPDIR)/biff.Po
include ./$(DEPDIR)/file.Po
include ./$(DEPDIR)/gnubiff.Po
include ./$(DEPDIR)/gtk_image_animation.Po
include ./$(DEPDIR)/gui.Po
include ./$(DEPDIR)/imap4.Po
include ./$(DEPDIR)/mailbox.Po
include ./$(DEPDIR)/maildir.Po
include ./$(DEPDIR)/mh.Po
include ./$(DEPDIR)/pop.Po
include ./$(DEPDIR)/pop3.Po
include ./$(DEPDIR)/socket.Po
include ./$(DEPDIR)/ui-applet-gnome.Po
include ./$(DEPDIR)/ui-applet-gtk.Po
include ./$(DEPDIR)/ui-applet.Po
include ./$(DEPDIR)/ui-authentication.Po
include ./$(DEPDIR)/ui-certificate.Po
include ./$(DEPDIR)/ui-popup.Po
include ./$(DEPDIR)/ui-preferences.Po
include ./$(DEPDIR)/ui-properties.Po

.cc.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
uninstall-info-am:
install-serverDATA: $(server_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(serverdir)" || $(mkdir_p) "$(DESTDIR)$(serverdir)"
	@list='$(server_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(serverDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(serverdir)/$$f'"; \
	  $(serverDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(serverdir)/$$f"; \
	done

uninstall-serverDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(server_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(serverdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(serverdir)/$$f"; \
	done
install-uiDATA: $(ui_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(uidir)" || $(mkdir_p) "$(DESTDIR)$(uidir)"
	@list='$(ui_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(uiDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(uidir)/$$f'"; \
	  $(uiDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(uidir)/$$f"; \
	done

uninstall-uiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ui_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(uidir)/$$f'"; \
	  rm -f "$(DESTDIR)$(uidir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(serverdir)" "$(DESTDIR)$(uidir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-serverDATA install-uiDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-serverDATA uninstall-uiDATA

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-serverDATA \
	install-strip install-uiDATA installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am uninstall-serverDATA uninstall-uiDATA


%.server:    %.server.in    $(INTLTOOL_MERGE) $(wildcard $(top_srcdir)/po/*.po) ; LC_ALL=C $(INTLTOOL_MERGE) -o -u -c $(top_builddir)/po/.intltool-merge-cache $(top_srcdir)/po $< $@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
